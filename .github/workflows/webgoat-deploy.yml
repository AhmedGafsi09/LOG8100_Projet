name: Deploy WebGoat
on:
  workflow_call:
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Kubesec scan
        uses: controlplaneio/kubesec-action@master
        with:
          input: kubernetes/*.yaml
          format: json
          output: kubesec-results.json

      - name: Scan Kubernetes manifests
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  deploy-webgoat:
    needs: security-scan
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Kubernetes config
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Verify cluster access
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Create namespace
        run: |
          kubectl create namespace webgoat --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply security policies
        run: |
          kubectl apply -f kubernetes/network-policies.yaml
          kubectl apply -f kubernetes/resource-quota.yaml
          kubectl wait --for=condition=Ready namespace/webgoat

      - name: Deploy WebGoat
        run: |
          kubectl apply -f kubernetes/webgoat.yaml -n webgoat
          kubectl rollout status deployment/webgoat -n webgoat --timeout=300s

      - name: Verify deployment
        run: |
          kubectl get pods -n webgoat
          kubectl get services -n webgoat

      - name: Security post-deployment check
        run: |
          kubectl auth can-i --list -n webgoat
          kubectl get networkpolicies -n webgoat
          kubectl get podsecuritypolicies -n webgoat

      - name: Monitor deployment
        run: |
          READY=$(kubectl get pods -n webgoat -l app=webgoat -o jsonpath='{.items[0].status.containerStatuses[0].ready}')
          if [ "$READY" != "true" ]; then
            kubectl logs -n webgoat -l app=webgoat
            exit 1
          fi
