name: Deployment
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/aks-node-1_key.pem
          chmod 600 ~/.ssh/aks-node-1_key.pem

      - name: Install Python and Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install --user ansible

      - name: Set up Kubernetes config
        run: |
            mkdir -p $HOME/.kube
            echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
            chmod 600 $HOME/.kube/config
            
      - name: Verify Kubernetes Configuration
        run: |
            kubectl config view --raw
            kubectl cluster-info

      - name: Test Ansible Connection
        run: |
          cd LOG8100_Projet/WebGoat-main/ansible
          ansible -i inventory.yml all -m ping -vvv

      - name: Run Ansible Playbook
        run: |
          cd LOG8100_Projet/WebGoat-main/ansible
          ansible-playbook -i inventory.yml site.yml -v --forks 10
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/log8100_projet

      - name: Check Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy CNI (Calico)
        run: |
          curl -LO https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
          curl -LO https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml
          kubectl apply -f tigera-operator.yaml
          kubectl apply -f custom-resources.yaml

      - name: Deploy Applications
        run: |
          kubectl create deployment webgoat --image=${{ secrets.DOCKER_USERNAME }}/log8100_projet:latest
          kubectl expose deployment webgoat --port=8080 --type=NodePort

      - name: Deploy Monitoring Stack
        run: |
          kubectl create namespace monitoring
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

          helm install prometheus prometheus-community/prometheus \
            --namespace monitoring \
            --set server.service.type=NodePort

          helm install grafana grafana/grafana \
            --namespace monitoring \
            --set service.type=NodePort \
            --set adminPassword=admin
