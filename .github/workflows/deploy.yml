name: Deployment
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/aks-node-1_key.pem
          chmod 600 ~/.ssh/aks-node-1_key.pem
          ssh-keyscan -H 20.63.16.243 >> ~/.ssh/known_hosts

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install --user ansible

      - name: Reset Kubernetes on VM
        run: |
          ssh -i ~/.ssh/aks-node-1_key.pem azureuser@20.63.16.243 'sudo kubeadm reset -f'

      - name: Copy Kubeadm Config to VM
        run: |
          cat > kubeadm-config.yaml << 'EOF'
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: InitConfiguration
          nodeRegistration:
            criSocket: "unix:///var/run/containerd/containerd.sock"
          ---
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: ClusterConfiguration
          apiServer:
            certSANs:
            - "20.63.16.243"
            - "10.0.0.4"
            - "10.96.0.1"
            - "kubernetes"
            - "kubernetes.default"
            - "kubernetes.default.svc"
          networking:
            podSubnet: "192.168.0.0/16"
            serviceSubnet: "10.96.0.0/12"
          EOF
          scp -i ~/.ssh/aks-node-1_key.pem kubeadm-config.yaml azureuser@20.63.16.243:~/

      - name: Initialize Kubernetes with External IP
        run: |
          ssh -i ~/.ssh/aks-node-1_key.pem azureuser@20.63.16.243 '
            sudo kubeadm init --config ~/kubeadm-config.yaml --upload-certs &&
            mkdir -p $HOME/.kube &&
            sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config &&
            sudo chown $(id -u):$(id -g) $HOME/.kube/config &&
            sudo sed -i "s/10.0.0.4/20.63.16.243/" $HOME/.kube/config &&
            kubectl config view | grep server &&
            kubectl get nodes
          '

      - name: Get New Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          scp -i ~/.ssh/aks-node-1_key.pem azureuser@20.63.16.243:.kube/config $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Update Local Kubeconfig
        run: |
          sed -i "s/10.0.0.4/20.63.16.243/" $HOME/.kube/config
          kubectl config view | grep server
          kubectl cluster-info

      - name: Wait for Node Ready
        run: |
          for i in {1..30}; do
            if kubectl get nodes | grep -q "Ready"; then
              echo "Node is Ready"
              break
            fi
            echo "Waiting for node to be ready... ($i/30)"
            sleep 10
          done

      - name: Deploy and Wait for Calico
        run: |
          kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
          for i in {1..30}; do
            if kubectl get pods -n kube-system -l k8s-app=calico-node 2>/dev/null | grep -q "calico-node"; then
              echo "Calico pods found, waiting for them to be ready..."
              break
            fi
            echo "Attempt $i/30: Waiting for Calico pods to be created..."
            sleep 10
          done
          for i in {1..30}; do
            if kubectl get pods -n kube-system -l k8s-app=calico-node | grep -q "Running"; then
              echo "Calico pods are running!"
              kubectl get pods -n kube-system -l k8s-app=calico-node
              break
            fi
            echo "Attempt $i/30: Waiting for Calico pods to be ready..."
            sleep 10
          done
          kubectl get nodes -o wide
          kubectl get pods -n kube-system | grep calico

      - name: Run Ansible Playbook
        run: |
          cd LOG8100_Projet/WebGoat-main/ansible
          ansible-playbook -i inventory.yml site.yml -v --forks 10
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/log8100_projet

  deploy-webgoat:
    needs: deploy
    uses: ./.github/workflows/webgoat-deploy.yml
