name: Deployment
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/aks-node-1_key.pem
          chmod 600 ~/.ssh/aks-node-1_key.pem

      - name: Install Python and Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install --user ansible

      - name: Set up Kubernetes config
        env:
          CLIENT_CERT: ${{ secrets.KUBE_CLIENT_CERT }}
          CLIENT_KEY: ${{ secrets.KUBE_CLIENT_KEY }}
        run: |
          mkdir -p $HOME/.kube
          echo "Creating kubeconfig..."
          echo "{" > $HOME/.kube/config
          echo "  \"apiVersion\": \"v1\"," >> $HOME/.kube/config
          echo "  \"clusters\": [{" >> $HOME/.kube/config
          echo "    \"cluster\": {" >> $HOME/.kube/config
          echo "      \"insecure-skip-tls-verify\": true," >> $HOME/.kube/config
          echo "      \"server\": \"https://20.63.16.243:6443\"" >> $HOME/.kube/config
          echo "    }," >> $HOME/.kube/config
          echo "    \"name\": \"kubernetes\"" >> $HOME/.kube/config
          echo "  }]," >> $HOME/.kube/config
          echo "  \"contexts\": [{" >> $HOME/.kube/config
          echo "    \"context\": {" >> $HOME/.kube/config
          echo "      \"cluster\": \"kubernetes\"," >> $HOME/.kube/config
          echo "      \"user\": \"kubernetes-admin\"" >> $HOME/.kube/config
          echo "    }," >> $HOME/.kube/config
          echo "    \"name\": \"kubernetes-admin@kubernetes\"" >> $HOME/.kube/config
          echo "  }]," >> $HOME/.kube/config
          echo "  \"current-context\": \"kubernetes-admin@kubernetes\"," >> $HOME/.kube/config
          echo "  \"kind\": \"Config\"," >> $HOME/.kube/config
          echo "  \"preferences\": {}," >> $HOME/.kube/config
          echo "  \"users\": [{" >> $HOME/.kube/config
          echo "    \"name\": \"kubernetes-admin\"," >> $HOME/.kube/config
          echo "    \"user\": {" >> $HOME/.kube/config
          echo "      \"client-certificate-data\": \"$CLIENT_CERT\"," >> $HOME/.kube/config
          echo "      \"client-key-data\": \"$CLIENT_KEY\"" >> $HOME/.kube/config
          echo "    }" >> $HOME/.kube/config
          echo "  }]" >> $HOME/.kube/config
          echo "}" >> $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify Kubernetes Config File
        run: |
          echo "Verifying kubeconfig file:"
          echo "File content:"
          cat $HOME/.kube/config

          echo "Checking file size:"
          ls -lh $HOME/.kube/config

          echo "Validating Base64 data:"
          echo "${{ secrets.KUBE_CLIENT_CERT }}" | base64 -d > /dev/null || echo "KUBE_CLIENT_CERT is invalid!"
          echo "${{ secrets.KUBE_CLIENT_KEY }}" | base64 -d > /dev/null || echo "KUBE_CLIENT_KEY is invalid!"

      - name: Debug Kubernetes Connection
        run: |
          echo "Validating Kubernetes connection:"
          echo "Server address: https://20.63.16.243:6443"

          echo "Checking cluster API server reachability:"
          curl -k https://20.63.16.243:6443/healthz || echo "Cluster API server is not reachable."

          echo "Attempting to view kubeconfig raw output:"
          kubectl config view --raw || echo "Failed to view kubeconfig."

          echo "Testing cluster-info:"
          kubectl cluster-info || echo "Failed to retrieve cluster info."

      - name: Verify Kubernetes Connection
        run: |
          echo "Testing Kubernetes config..."
          kubectl config view --raw
          kubectl cluster-info
