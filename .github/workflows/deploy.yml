name: Deployment
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/aks-node-1_key.pem
          chmod 600 ~/.ssh/aks-node-1_key.pem

      - name: Install Python and Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install --user ansible

      - name: Set up Kubernetes config
        env:
          KUBE_CLIENT_CERT: ${{ secrets.KUBE_CLIENT_CERT }}
          KUBE_CLIENT_KEY: ${{ secrets.KUBE_CLIENT_KEY }}
        run: |
          mkdir -p $HOME/.kube
          cat > $HOME/.kube/config << EOF
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://20.63.16.243:6443
            name: kubernetes
          contexts:
          - context:
              cluster: kubernetes
              user: kubernetes-admin
            name: kubernetes-admin@kubernetes
          current-context: kubernetes-admin@kubernetes
          kind: Config
          preferences: {}
          users:
          - name: kubernetes-admin
            user:
              client-certificate-data: ${KUBE_CLIENT_CERT}
              client-key-data: ${KUBE_CLIENT_KEY}
          EOF
          chmod 600 $HOME/.kube/config

          # Debug: Check if the config file has content (optional)
          cat $HOME/.kube/config

      - name: Test Ansible Connection
        run: |
          cd LOG8100_Projet/WebGoat-main/ansible
          ansible -i inventory.yml all -m ping -vvv

      - name: Run Ansible Playbook
        run: |
          cd LOG8100_Projet/WebGoat-main/ansible
          ansible-playbook -i inventory.yml site.yml -v --forks 10
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/log8100_projet

      - name: Check Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy CNI (Calico)
        run: |
          curl -LO https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
          curl -LO https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml
          kubectl apply -f tigera-operator.yaml
          kubectl apply -f custom-resources.yaml

      - name: Deploy Applications
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

      - name: Debug Kubernetes Cluster
        run: |
          kubectl cluster-info dump
