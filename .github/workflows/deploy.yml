name: Deployment

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Install Prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible kubectl curl
          curl -fsSL https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar -xz -C /usr/local/bin --strip-components=1

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status
          kubectl get nodes

      - name: Set Minikube Context
        run: |
          minikube update-context
          kubectl cluster-info

      - name: Set up SSH Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/aks-node-1_key.pem
          chmod 600 ~/.ssh/aks-node-1_key.pem

      - name: Run Ansible Playbook
        run: |
          cd LOG8100_Projet/WebGoat-main/ansible
          ansible-playbook -i inventory.yml site.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: false

      - name: Setup Monitoring with Helm
        run: |
          # Add Helm repositories
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

          # Install Prometheus
          helm install prometheus prometheus-community/kube-prometheus-stack \
            --namespace monitoring --create-namespace \
            --set alertmanager.config.global.resolve_timeout="5m" \
            --set prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues=false \
            --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false

          # Install Grafana
          helm install grafana grafana/grafana \
            --namespace monitoring \
            --set adminPassword=admin \
            --set service.type=NodePort \
            --set service.nodePort=30300

      - name: Apply WebGoat Configuration
        run: |
          kubectl create namespace webgoat || true
          kubectl apply -f LOG8100_Projet/WebGoat-main/kubernetes/webgoat-deployment.yml
          kubectl apply -f LOG8100_Projet/WebGoat-main/kubernetes/webgoat-service.yml

      - name: Wait for Deployments
        run: |
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/aks-node-1_key.pem azureuser@20.63.16.243 <<EOF
            export KUBECONFIG=/home/azureuser/.kube/config
            kubectl rollout status deployment/webgoat -n webgoat --timeout=300s
            EOF
            
      - name: Verify Services
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aks-node-1_key.pem azureuser@20.63.16.243 <<EOF
          export KUBECONFIG=/home/azureuser/.kube/config
          kubectl get all -n monitoring
          kubectl get all -n webgoat
          EOF

      - name: Debug Information
        if: always()
        run: |
          kubectl describe nodes
          kubectl get pods -A
