name: Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip kubectl
          pip install --user ansible kubernetes

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Set up Kubernetes config
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.AZURE_KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          
          # Validate connection
          kubectl cluster-info
          kubectl get nodes

      - name: Create Namespaces
        run: |
          kubectl create namespace webgoat --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Applications
        working-directory: LOG8100_Projet/WebGoat-main/kubernetes
        run: |
          kubectl apply -f webgoat-deployment.yml -n webgoat
          kubectl apply -f webgoat-service.yml -n webgoat
          kubectl apply -f service-monitor.yml -n webgoat
          
          # Wait for deployment
          kubectl rollout status deployment/webgoat -n webgoat --timeout=300s

      - name: Deploy Monitoring Stack
        working-directory: LOG8100_Projet/WebGoat-main/kubernetes
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

          # Install Prometheus
          helm upgrade --install prometheus prometheus-community/prometheus \
            --namespace monitoring \
            -f helm-values/prometheus-values.yaml \
            --wait --timeout 10m

          # Install Grafana
          helm upgrade --install grafana grafana/grafana \
            --namespace monitoring \
            -f helm-values/grafana-values.yaml \
            --wait --timeout 10m

      - name: Verify Deployment
        run: |
          for ns in webgoat monitoring; do
            echo "=== Namespace: $ns ==="
            echo "Pods:"
            kubectl get pods -n $ns
            echo "Services:"
            kubectl get svc -n $ns
            echo "Deployments:"
            kubectl get deployments -n $ns
          done
