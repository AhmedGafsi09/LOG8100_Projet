name: Deployment
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'AhmedGafsi09/LOG8100_Projet'
          path: 'LOG8100_Projet'

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/aks-node-1_key.pem
          chmod 600 ~/.ssh/aks-node-1_key.pem

      - name: Install Python and Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install --user ansible

      - name: Set up Kubernetes config
        env:
          CLIENT_CERT: ${{ secrets.KUBE_CLIENT_CERT }}
          CLIENT_KEY: ${{ secrets.KUBE_CLIENT_KEY }} 
        run: |
          mkdir -p $HOME/.kube
          echo '{
            "apiVersion": "v1",
            "clusters": [{
              "cluster": {
                "insecure-skip-tls-verify": true,
                "server": "https://20.63.16.243:6443"
              },
              "name": "kubernetes"
            }],
            "contexts": [{
              "context": {
                "cluster": "kubernetes",
                "user": "kubernetes-admin"
              },
              "name": "kubernetes-admin@kubernetes"
            }],
            "current-context": "kubernetes-admin@kubernetes",
            "kind": "Config",
            "preferences": {},
            "users": [{
              "name": "kubernetes-admin",
              "user": {
                "client-certificate-data": "$CLIENT_CERT",
                "client-key-data": "$CLIENT_KEY" | envsubst > $HOME/.kube/config
                        chmod 600 $HOME/.kube/config
              }
            }]
          }' > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify cluster access
        run: |
          kubectl config view --raw
          kubectl cluster-info
